#include <iostream>
using namespace std;

 int a[20] ;
 int c [40][40] ; 

 void swap(int a, int b, int arr[]) {
    int x = arr[a];
    arr[a] = arr[b];
    arr[b] = x;
}

void next_permutation(int n) {
    int j = n - 1;
    while (a[j] > a[j + 1]) {
        j--;
    }
    int k = n;
    while (a[j] > a[k]) {
        k--;
    }
    swap(j, k, a);
    int r = n, s = j + 1;
    while (r > s) {
        swap(r, s, a);
        r--;
        s++;
    }
}

 int xuly(int n) {
    int cost = 0;
    for (int i = 1; i <= n; i++) {
        cost += c[a[i]][a[i] + n];
    }
    for (int i = 1; i < n; i++) {
        cost += c[a[i] + n][a[i + 1]];
    }
    cost += (c[a[n] + n][0] + c[0][a[1]]);
    return cost;
}

 bool check(int n) {
    int x = n;
    for (int i = 1; i <= n; i++) {
        if (a[i] == x) {
            x--;
        }
        else {
            return false;
        }
    }
    return true;
}


int main() {
    
    int n, res=0;
    cin >> n;
    for (int i = 0; i < 2 * n + 1; i++) {
        for (int j = 0; j < 2 * n + 1; j++) {
            cin >> c[i][j];
        }
    }

    for (int j = 1; j <= n; j++) {
        a[j] = j;
    }
  
    int x = 0;
    while (true) {
        int cost = xuly(n);
        if (res == 0) {
            res = cost;
        }else if (cost < res && res > 0) {
            res = cost;
        }
        if (check(n)) {
            break;
        }
        next_permutation(n);
    }

    cout << res;
}